package com.example.tdmimport android.content.Contextimport android.content.Intentimport android.os.Bundleimport android.text.TextUtils.replaceimport android.util.Logimport androidx.fragment.app.Fragmentimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport android.widget.Toastimport androidx.navigation.Navigationimport androidx.navigation.findNavControllerimport androidx.navigation.fragment.findNavControllerimport com.example.tdm.API.RetrofitServiceimport com.example.tdm.DATA.Model.Userimport com.example.tdm.Util.md5import com.example.tdm.Util.verifyLoginInputimport kotlinx.android.synthetic.main.fragment_login.*import kotlinx.android.synthetic.main.fragment_login.errors2import kotlinx.android.synthetic.main.fragment_signup.*import kotlinx.android.synthetic.main.fragment_traitements.*import retrofit2.Callimport retrofit2.Callbackimport retrofit2.Responseclass LoginFragment : Fragment(R.layout.fragment_login) {    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {      return super.onCreateView(inflater, container, savedInstanceState)    }    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {        super.onViewCreated(view, savedInstanceState)        //navigate to signup page        btn_inscription.setOnClickListener {            activity?.supportFragmentManager?.beginTransaction()?.apply {                replace(R.id.fragmenthost,SignUpFragment())                commit()            }            Toast.makeText(activity, "hello from here", Toast.LENGTH_SHORT).show()            //activity!!.findNavController(R.id.fragmenthost).navigate(R.id.signUpFragment)            //activity!!.supportFragmentManager.beginTransaction().replace(R.id.fragmenthost,SignUpFragment()).commit()        }        btn_signIn.setOnClickListener {                    authenticate()        }        btn_guestSignIn.setOnClickListener {            val pref  = activity!!.getPreferences(Context.MODE_PRIVATE)            with(pref.edit()) {                putString("status","guest")                putInt("id_client", -1)                apply()            }            val intent = Intent(activity,HomeActivity::class.java)            startActivity(intent)            requireActivity().finish()        }    }    override fun onActivityCreated(savedInstanceState: Bundle?) {        super.onActivityCreated(savedInstanceState)    }//    override fun onDestroy() {//        super.onDestroy()//        errors2.text = ""//    }    private fun authenticate() {        if (!verifyLoginInput(et_email.text.toString(),et_password.text.toString())){            errors2.text = "you must fill all the fields"            return        }        val emailHash = (et_email.text).toString().md5()        val passwordHash = (et_password.text).toString().md5()        Log.d("email hash", emailHash)        Log.d("password hash", passwordHash)        val user = User(emailHash,passwordHash)        val call = RetrofitService.endpoint.authentication(user)        call.enqueue(object: Callback<List<Int>> {            override fun onResponse(call: Call<List<Int>>, response: Response<List<Int>>) {                    if (response.isSuccessful){                        val res = response.body()                        val id_client = res?.get(0)                        if(id_client == -1){                            Toast.makeText(context, "vous n'etes pas deja inscrit", Toast.LENGTH_SHORT).show()                        }else{                            Toast.makeText(context, "successful login", Toast.LENGTH_SHORT).show()                            connectUser(id_client)                        }                    }            }            override fun onFailure(call: Call<List<Int>>, t: Throwable) {                // login failed  ( server problems )                Toast.makeText(context, "un problem de connexion a votre compte", Toast.LENGTH_SHORT).show()            }        })    }    private fun connectUser(idClient: Int?) {        val pref  = activity?.getSharedPreferences("pref",Context.MODE_PRIVATE) ?: return        with(pref.edit()) {            putString("status","connected")            putInt("id_client", idClient!!)            apply()        }        Toast.makeText(context, "id client = ${idClient}", Toast.LENGTH_SHORT).show()        val intent = Intent(activity,HomeActivity::class.java)        startActivity(intent)        requireActivity().finish()    }}